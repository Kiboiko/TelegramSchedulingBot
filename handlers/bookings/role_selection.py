from aiogram import types
from aiogram.fsm.context import FSMContext
from ...keyboards import generate_subjects_keyboard
from ...states import BookingStates


async def process_role_selection(callback: types.CallbackQuery, state: FSMContext):
    role = callback.data.split("_")[1]
    user_id = callback.from_user.id

    await state.update_data(user_role=role)

    if role == 'teacher':
        # –î–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ Google Sheets
        teacher_subjects = storage.get_teacher_subjects(user_id)

        # –î–ï–ë–ê–ì: –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã
        logger.info(f"Teacher {user_id} subjects: {teacher_subjects} (type: {type(teacher_subjects)})")

        # –í–†–ï–ú–ï–ù–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ï—Å–ª–∏ –ø—Ä–∏—à–µ–ª —Å–ø–∏—Å–æ–∫ —Å –æ–¥–Ω–∏–º —ç–ª–µ–º–µ–Ω—Ç–æ–º '1234'
        if (teacher_subjects and
                isinstance(teacher_subjects, list) and
                len(teacher_subjects) == 1 and
                teacher_subjects[0].isdigit() and
                len(teacher_subjects[0]) > 1):
            # –†–∞–∑–±–∏–≤–∞–µ–º '1234' –Ω–∞ ['1', '2', '3', '4']
            combined_subject = teacher_subjects[0]
            teacher_subjects = [digit for digit in combined_subject]
            logger.info(f"Fixed combined subjects: {teacher_subjects}")

        if not teacher_subjects:
            await callback.answer(
                "–£ –≤–∞—Å –Ω–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.\n –¢–µ–ª–µ—Ñ–æ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: +79001372727",
                show_alert=True
            )
            return

        await state.update_data(subjects=teacher_subjects)

        # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π –ø—Ä–µ–¥–º–µ—Ç–æ–≤
        subject_names = []
        for subj_id in teacher_subjects:
            subject_names.append(SUBJECTS.get(subj_id, f"–ü—Ä–µ–¥–º–µ—Ç {subj_id}"))

        await callback.message.edit_text(
            f"–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–æ–ª—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è\n"
            f"–í–∞—à–∏ –ø—Ä–µ–¥–º–µ—Ç—ã: {', '.join(subject_names)}\n"
            "–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É:",
            reply_markup=generate_calendar()
        )
        await state.set_state(BookingStates.SELECT_DATE)

    elif role == 'student':
        # –î–ª—è —É—á–µ–Ω–∏–∫–∞ —Å—Ä–∞–∑—É –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç
        available_subjects = storage.get_available_subjects_for_student(user_id)

        if not available_subjects:
            await callback.answer(
                "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.\n –¢–µ–ª–µ—Ñ–æ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: +79001372727",
                show_alert=True
            )
            return

        await callback.message.edit_text(
            "–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–æ–ª—å —É—á–µ–Ω–∏–∫–∞\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –∑–∞–Ω—è—Ç–∏—è:",
            reply_markup=generate_subjects_keyboard(available_subjects=available_subjects)
        )
        await state.set_state(BookingStates.SELECT_SUBJECT)

    elif role == 'parent':
        # –î–ª—è —Ä–æ–¥–∏—Ç–µ–ª—è –ø–æ–ª—É—á–∞–µ–º –¥–µ—Ç–µ–π
        children_ids = storage.get_parent_children(user_id)

        if not children_ids:
            await callback.answer(
                "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–µ—Ç–µ–π. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.\n –¢–µ–ª–µ—Ñ–æ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: +79001372727",
                show_alert=True
            )
            return

        builder = InlineKeyboardBuilder()
        for child_id in children_ids:
            child_info = storage.get_child_info(child_id)
            child_name = child_info.get('user_name', f'–£—á–µ–Ω–∏–∫ {child_id}')
            builder.button(
                text=f"üë∂ {child_name}",
                callback_data=f"select_child_{child_id}"
            )

        builder.button(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_child_selection")
        builder.adjust(1)

        await callback.message.edit_text(
            "–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–æ–ª—å —Ä–æ–¥–∏—Ç–µ–ª—è\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–±–µ–Ω–∫–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏:",
            reply_markup=builder.as_markup()
        )
        await state.set_state(BookingStates.PARENT_SELECT_CHILD)

    await callback.answer()