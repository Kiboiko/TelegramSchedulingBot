from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from services.storage_service import storage
from keyboards import generate_booking_actions

router = Router()


@router.message(F.text == "üìã –ú–æ–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")
async def show_my_bookings(message: types.Message):
    user_id = message.from_user.id
    bookings = storage.load()
    user_bookings = [b for b in bookings if b.get('user_id') == user_id]

    if not user_bookings:
        await message.answer("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π")
        return

    response = "üìã –í–∞—à–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:\n\n"
    for booking in sorted(user_bookings, key=lambda x: (x.get('date'), x.get('start_time'))):
        response += (
            f"üìÖ {booking.get('date')} | ‚è∞ {booking.get('start_time')}-{booking.get('end_time')}\n"
            f"üë§ –†–æ–ª—å: {booking.get('user_role')}\n"
        )

        if booking.get('user_role') == 'teacher':
            subjects = booking.get('subjects', [])
            subject_text = ", ".join([SUBJECTS.get(subj, subj) for subj in subjects])
            response += f"üìö –ü—Ä–µ–¥–º–µ—Ç—ã: {subject_text}\n"
        else:
            subject_text = SUBJECTS.get(booking.get('subject', ''), '')
            response += f"üìö –ü—Ä–µ–¥–º–µ—Ç: {subject_text}\n"

        response += f"üîó ID: {booking.get('id')}\n\n"

    await message.answer(response)


@router.callback_query(F.data.startswith("cancel_booking_"))
async def cancel_booking(callback: types.CallbackQuery):
    booking_id = int(callback.data.replace("cancel_booking_", ""))

    if storage.cancel_booking(booking_id):
        await callback.message.edit_text("‚úÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–æ")
    else:
        await callback.message.edit_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–º–µ–Ω—ã")


@router.callback_query(F.data == "back_to_bookings")
async def back_to_bookings(callback: types.CallbackQuery):
    await callback.message.delete()
    await show_my_bookings(callback.message)