from datetime import datetime, time, timedelta
from typing import Dict


def _add_minutes_to_time(time_obj: time, minutes: int) -> time:
    """–î–æ–±–∞–≤–ª—è–µ—Ç –º–∏–Ω—É—Ç—ã –∫ –æ–±—ä–µ–∫—Ç—É time"""
    dummy_date = datetime(2023, 1, 1)
    combined_datetime = datetime.combine(dummy_date, time_obj)
    new_datetime = combined_datetime + timedelta(minutes=minutes)
    return new_datetime.time()


def _create_empty_time_slots() -> Dict[time, Dict]:
    """–°–æ–∑–¥–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å–æ –≤—Å–µ–º–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏ —Å 9:00 –¥–æ 20:00"""
    time_slots = {}
    current_time = time(9, 0)
    end_time = time(20, 0)

    while current_time <= end_time:
        time_slots[current_time] = {
            'distribution': {},
            'condition_result': True
        }
        next_time = (current_time.hour * 60 + current_time.minute + 30) // 60
        next_minute = (current_time.hour * 60 + current_time.minute + 30) % 60
        current_time = time(next_time, next_minute)

    return time_slots


def get_subject_short_name(subject_id: str) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞"""
    subject_names = {
        "1": "üìê –ú–∞—Ç",
        "2": "‚öõÔ∏è –§–∏–∑",
        "3": "üíª –ò–Ω—Ñ",
        "4": "üìñ –†—É—Å"
    }
    return subject_names.get(subject_id, subject_id[:3] if subject_id else "???")