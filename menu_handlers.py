# menu_handlers.py
from aiogram import types, F
from aiogram.filters import Command, CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.utils.keyboard import ReplyKeyboardMarkup, KeyboardButton
import logging
from config import is_admin
from states import BookingStates
import logging

logger = logging.getLogger(__name__)

# –ú–µ–Ω—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ —Ä–æ–ª–µ–π
no_roles_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="‚ùì –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É")],
        [KeyboardButton(text="üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ —Ä–æ–ª–µ–π")],
    ],
    resize_keyboard=True
)

async def generate_main_menu(user_id: int,storage) -> ReplyKeyboardMarkup:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–µ–π –∏ –ø—Ä–∞–≤"""
    roles = storage.get_user_roles(user_id)

    if not roles:
        return no_roles_menu

    keyboard_buttons = []

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å
    can_book = any(role in roles for role in ['teacher', 'parent']) or (
            'student' in roles and 'parent' in roles
    )

    if can_book:
        keyboard_buttons.append([KeyboardButton(text="üìÖ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–µ–º—è")])

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Ñ–∏–Ω–∞–Ω—Å–æ–≤ —Ç–æ–ª—å–∫–æ –¥–ª—è —É—á–µ–Ω–∏–∫–æ–≤
    if 'student' in roles or 'parent' in roles:
        keyboard_buttons.append([KeyboardButton(text="üí∞ –§–∏–Ω–∞–Ω—Å—ã")])

    keyboard_buttons.append([KeyboardButton(text="üìã –ú–æ–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")])
    keyboard_buttons.append([KeyboardButton(text="üìö –ü—Ä–æ—à–µ–¥—à–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")])
    keyboard_buttons.append([KeyboardButton(text="üë§ –ú–æ—è —Ä–æ–ª—å")])
    keyboard_buttons.append([KeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å")])

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    if is_admin(user_id):
        keyboard_buttons.append([KeyboardButton(text="üìä –°–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")])

    return ReplyKeyboardMarkup(keyboard=keyboard_buttons, resize_keyboard=True)

async def cmd_start(message: types.Message, state: FSMContext, storage):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user_id = message.from_user.id
    user_name = storage.get_user_name(user_id)

    menu = await generate_main_menu(user_id, storage)

    if user_name:
        await message.answer(
            f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user_name}!\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:",
            reply_markup=menu
        )
    else:
        await message.answer(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è!\n"
            "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:",
            reply_markup=types.ReplyKeyboardRemove()
        )
        await state.set_state(BookingStates.INPUT_NAME)

async def check_roles(message: types.Message, state: FSMContext, storage):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–µ–π - –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É /start"""
    await cmd_start(message, state, storage)

async def show_my_role(message: types.Message, storage):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    roles = storage.get_user_roles(message.from_user.id)
    logger.info("–ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ä–æ–ª–∏: " + ",".join(role for role in roles))
    logger.info("ID –¥–ª—è –ø–æ–∏—Å–∫–∞: " + str(message.from_user.id))
    
    if roles:
        role_translations = {
            "teacher": "–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å",
            "student": "—É—á–µ–Ω–∏–∫",
            "parent": "—Ä–æ–¥–∏—Ç–µ–ª—å"
        }
        role_text = ", ".join([role_translations.get(role, role) for role in roles])
        await message.answer(f"–í–∞—à–∏ —Ä–æ–ª–∏: {role_text}")
    else:
        await message.answer(
            "–í–∞—à–∏ —Ä–æ–ª–∏ –µ—â–µ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. \n –¢–µ–ª–µ—Ñ–æ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: +79001372727")

async def show_help(message: types.Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É"""
    await cmd_help(message)

async def cmd_help(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    await message.answer(
        "üìû –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É\n"
        "–¢–µ–ª–µ—Ñ–æ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: +79001372727.\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
        "/book - –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–µ–º—è\n"
        "/my_bookings - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n"
        "/my_role - —É–∑–Ω–∞—Ç—å —Å–≤–æ—é —Ä–æ–ª—å"
    )

async def contact_admin(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É"""
    await message.answer(
        "üìû –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∏—Å—Ç–µ–º–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n"
        "–æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É \n –¢–µ–ª–µ—Ñ–æ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: +79001372727.\n\n"
        "–ü–æ—Å–ª–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ä–æ–ª–µ–π –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å–µ–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –±–æ—Ç–∞."
    )

# –°–æ–∑–¥–∞–µ–º –æ–±–µ—Ä—Ç–∫–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–µ–±—É—é—Ç booking_manager
def create_bookings_handler(booking_manager):
    async def show_bookings_handler(message: types.Message):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"""
        keyboard = booking_manager.generate_booking_list(message.from_user.id)
        if not keyboard:
            await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π")
            return

        await message.answer("–í–∞—à–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è (–æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–æ –¥–∞—Ç–µ –∏ –≤—Ä–µ–º–µ–Ω–∏):", 
                            reply_markup=keyboard.as_markup() if hasattr(keyboard, 'as_markup') else keyboard)
    return show_bookings_handler

def create_past_bookings_handler(booking_manager):
    async def show_past_bookings_handler(message: types.Message):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ—à–µ–¥—à–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"""
        keyboard = booking_manager.generate_past_bookings_list(message.from_user.id)
        if not keyboard:
            await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–æ—à–µ–¥—à–∏—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π")
            return

        await message.answer("üìö –í–∞—à–∏ –ø—Ä–æ—à–µ–¥—à–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:", 
                            reply_markup=keyboard.as_markup() if hasattr(keyboard, 'as_markup') else keyboard)
    return show_past_bookings_handler

async def back_to_menu_handler(callback: types.CallbackQuery, storage):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    user_id = callback.from_user.id
    menu = await generate_main_menu(user_id, storage)

    await callback.message.edit_text(
        "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
        reply_markup=None
    )
    await callback.message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=menu
    )
    await callback.answer()

# –°–æ–∑–¥–∞–µ–º –æ–±–µ—Ä—Ç–∫–∏ –¥–ª—è callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–µ–±—É—é—Ç booking_manager
def create_back_to_bookings_handler(booking_manager):
    async def back_to_bookings_handler(callback: types.CallbackQuery):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π"""
        user_id = callback.from_user.id
        keyboard = booking_manager.generate_booking_list(user_id)
        if keyboard:
            await callback.message.edit_text(
                "–í–∞—à–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:",
                reply_markup=keyboard.as_markup()  # Add .as_markup() here
            )
        else:
            await callback.message.edit_text("–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π")
        await callback.answer()
    return back_to_bookings_handler

def create_back_to_past_bookings_handler(booking_manager):
    async def back_to_past_bookings_handler(callback: types.CallbackQuery):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É –ø—Ä–æ—à–µ–¥—à–∏—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π"""
        user_id = callback.from_user.id
        keyboard = booking_manager.generate_past_bookings_list(user_id)
        
        if keyboard:
            await callback.message.edit_text(
                "üìö –í–∞—à–∏ –ø—Ä–æ—à–µ–¥—à–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:",
                reply_markup=keyboard.as_markup()  # Add .as_markup() here
            )
        else:
            await callback.message.edit_text("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–æ—à–µ–¥—à–∏—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π")
            await callback.answer()
    return back_to_past_bookings_handler

async def back_to_menu_from_past_handler(callback: types.CallbackQuery, storage):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ –ø—Ä–æ—à–µ–¥—à–∏—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π"""
    user_id = callback.from_user.id
    menu = await generate_main_menu(user_id, storage)

    await callback.message.edit_text(
        "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
        reply_markup=None
    )
    await callback.message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=menu
    )
    await callback.answer()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–µ
def register_menu_handlers(dp, booking_manager, storage):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–µ–Ω—é –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–µ"""
    
    # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å booking_manager
    show_bookings_handler = create_bookings_handler(booking_manager)
    show_past_bookings_handler = create_past_bookings_handler(booking_manager)
    back_to_bookings_handler = create_back_to_bookings_handler(booking_manager)
    back_to_past_bookings_handler = create_back_to_past_bookings_handler(booking_manager)
    
    # –°–æ–∑–¥–∞–µ–º –æ–±–µ—Ä—Ç–∫–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–º –Ω—É–∂–µ–Ω storage
    async def wrapped_cmd_start(message: types.Message, state: FSMContext):
        return await cmd_start(message, state, storage)
    
    async def wrapped_check_roles(message: types.Message, state: FSMContext):
        return await check_roles(message, state, storage)
    
    async def wrapped_show_my_role(message: types.Message):
        return await show_my_role(message, storage)
    
    async def wrapped_back_to_menu_handler(callback: types.CallbackQuery):
        return await back_to_menu_handler(callback, storage)
    
    async def wrapped_back_to_menu_from_past_handler(callback: types.CallbackQuery):
        return await back_to_menu_from_past_handler(callback, storage)
    
    # –ö–æ–º–∞–Ω–¥—ã
    dp.message.register(wrapped_cmd_start, CommandStart())
    dp.message.register(cmd_help, Command("help"))
    dp.message.register(wrapped_show_my_role, Command("my_role"))
    
    # –¢–µ–∫—Å—Ç–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–µ–Ω—é
    dp.message.register(wrapped_check_roles, F.text == "üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ —Ä–æ–ª–µ–π")
    dp.message.register(wrapped_show_my_role, F.text == "üë§ –ú–æ—è —Ä–æ–ª—å")
    dp.message.register(show_help, F.text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å")
    dp.message.register(contact_admin, F.text == "‚ùì –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É")
    dp.message.register(show_bookings_handler, F.text == "üìã –ú–æ–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")
    dp.message.register(show_past_bookings_handler, F.text == "üìö –ü—Ä–æ—à–µ–¥—à–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")
    
    # Callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    dp.callback_query.register(
        wrapped_back_to_menu_handler, 
        F.data == "back_to_menu"
    )
    dp.callback_query.register(
        back_to_bookings_handler,
        F.data == "back_to_bookings"
    )
    dp.callback_query.register(
        back_to_past_bookings_handler,
        F.data == "back_to_past_bookings"
    )
    dp.callback_query.register(
        wrapped_back_to_menu_from_past_handler,
        F.data == "back_to_menu_from_past"
    )